(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.STTPackage = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.IMAGE_SERVER_DOMAIN = exports.DEFAULT_IMAGE_SERVER_DOMAIN = exports.REPLACEABLE_IMAGE_SERVER_DOMAIN = exports.IMAGE_SERVERS = exports.HOME_PAGE_SECTIONS = exports.DEFAULT_FILTERS = exports.SEARCH_SORTERS = exports.COMIC_TYPES = exports.VERTICAL_TYPES = exports.PREF_KEYS = exports.HENTAIVN_DOMAIN = void 0;
const daisuke_1 = require("@suwatte/daisuke");
exports.HENTAIVN_DOMAIN = "https://hentaihvn.tv";
exports.PREF_KEYS = {
    cache_request: "request",
    exclude_categories: "exclude_categories",
    domain: "domain",
    image_server: "image_server"
};
exports.VERTICAL_TYPES = ["Manhwa", "Webtoon"];
exports.COMIC_TYPES = ["Comic"];
exports.SEARCH_SORTERS = [
    {
        id: "view0",
        title: "Mới nhất",
    },
    {
        id: "view5",
        title: "Top like ngày",
    },
    {
        id: "view2",
        title: "Top like tuần",
    },
    {
        id: "view3",
        title: "Top like tháng",
    },
    {
        id: "view",
        title: "Top like all",
    },
    {
        id: "view4",
        title: "Thịnh hành",
    },
];
exports.DEFAULT_FILTERS = [
    {
        id: "manga_name",
        title: "Tên truyện cần tìm",
        subtitle: "Không ghi cũng được",
        type: daisuke_1.FilterType.TEXT,
    },
    {
        id: "doujinshi",
        title: "Doujinshi bộ nào",
        subtitle: `Có thể để trống`,
        type: daisuke_1.FilterType.TEXT,
    },
    {
        id: "character",
        title: "Nhân vật gì",
        subtitle: "Có thể để trống",
        type: daisuke_1.FilterType.TEXT,
    },
];
exports.HOME_PAGE_SECTIONS = [
    {
        id: "trending",
        title: "Thịnh hành",
        style: daisuke_1.SectionStyle.DEFAULT,
    },
    {
        id: "hot",
        title: "Tiêu điểm",
        style: daisuke_1.SectionStyle.GALLERY,
    },
    {
        id: "random_suggestion",
        title: "Gợi ý ngẫu nhiên",
        style: daisuke_1.SectionStyle.INFO,
    },
    {
        id: "recommend",
        title: "Truyện đề cử",
        subtitle: "Chỉ có truyện từng đạt top 1 Thịnh hành mới nhận được đề cử từ hệ thống.",
        style: daisuke_1.SectionStyle.GALLERY,
        viewMoreLink: { request: { page: 1, configID: "top-de-cu.html", sort: { id: "" } } }
    },
    {
        id: "new_upload",
        title: "Truyện mới đăng",
        style: daisuke_1.SectionStyle.INFO,
    },
    {
        id: "top_liked_daily",
        title: "Top like ngày",
        style: daisuke_1.SectionStyle.NAVIGATION_LIST,
    },
    {
        id: "top_liked_all",
        title: "Top like toàn thời gian",
        style: daisuke_1.SectionStyle.INFO,
        viewMoreLink: { request: { page: 1, configID: "top-luot-xem.html", sort: { id: "" } } },
    },
    {
        id: "new_update",
        title: "Mới cập nhật",
        style: daisuke_1.SectionStyle.PADDED_LIST,
        viewMoreLink: { request: { page: 1, configID: "new_update", sort: { id: "" } } },
    },
];
exports.IMAGE_SERVERS = [
    {
        id: "server_1",
        title: "Server 1",
    },
    {
        id: "server_2",
        title: "Server 2",
    }
];
exports.REPLACEABLE_IMAGE_SERVER_DOMAIN = "evvdsfgefdszihfdx.hentaivn.tv";
exports.DEFAULT_IMAGE_SERVER_DOMAIN = "i3.hhentai.net";
exports.IMAGE_SERVER_DOMAIN = {
    "server_1": exports.DEFAULT_IMAGE_SERVER_DOMAIN,
    "server_2": "cdns.hhentai.net",
};

},{"@suwatte/daisuke":6}],2:[function(require,module,exports){
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Controller = void 0;
const constants_1 = require("./constants");
const parser_1 = require("./parser");
const cheerio_1 = require("cheerio");
const memory_cache_1 = __importDefault(require("memory-cache"));
const store_1 = require("./store");
class Controller {
    constructor() {
        this.client = new NetworkClient();
        this.parser = new parser_1.Parser();
        this.cache = new memory_cache_1.default.Cache();
    }
    async buildHomePageSections() {
        const domain = await store_1.GlobalStore.getDomain();
        const promises = [];
        const sections = [];
        let defaultCheerio = (0, cheerio_1.load)("");
        for (const section of constants_1.HOME_PAGE_SECTIONS) {
            let url;
            switch (section.id) {
                case 'trending':
                case 'hot':
                case 'new_update':
                case 'top_liked_daily':
                    url = domain;
                    break;
                case 'recommend':
                    url = domain + '/top-de-cu.html';
                    break;
                case 'top_liked_all':
                    url = domain + "/top-luot-xem.html";
                    break;
                case 'new_upload':
                    url = domain + "/list-new2.php";
                    break;
                case 'random_suggestion':
                    url = domain + "/list-random.php";
                    break;
                default:
                    throw new Error("Invalid homepage section ID");
            }
            if ((section.id == "trending") || (url != domain)) {
                promises.push(this.fetchHTML(url).then(async ($) => {
                    if (url == domain) {
                        defaultCheerio = $;
                    }
                    const items = await this.parser.getHomepageSection($, section.id);
                    sections.push({ ...section, items });
                }));
            }
        }
        await Promise.all(promises);
        for (const section of constants_1.HOME_PAGE_SECTIONS) {
            if (['hot', 'new_update', 'top_liked_daily'].includes(section.id)) {
                const items = await this.parser.getHomepageSection(defaultCheerio, section.id);
                sections.push({ ...section, items });
            }
        }
        const sectionIdInOrder = constants_1.HOME_PAGE_SECTIONS.map((section) => {
            return section.id;
        });
        sections.sort((a, b) => sectionIdInOrder.indexOf(a.id) - sectionIdInOrder.indexOf(b.id));
        return sections;
    }
    async getSearchResults(request) {
        const searchConfig = await this.createSearchConfig(request);
        const $ = await this.fetchHTML(searchConfig.url, { cookies: searchConfig.cookies });
        const parseFunction = searchConfig.func.bind(this.parser);
        const results = await parseFunction($);
        return {
            results,
            isLastPage: this.parser.isLastPage($)
        };
    }
    async getCategories() {
        const domain = await store_1.GlobalStore.getDomain();
        const $ = await this.fetchHTML(`${domain}/tag_box.php`);
        return this.parser.getCategories($);
    }
    async getFilters() {
        const domain = await store_1.GlobalStore.getDomain();
        const $ = await this.fetchHTML(`${domain}/forum/search-plus.php`);
        return this.parser.getFilters($);
    }
    async createSearchConfig(request) {
        const cookie = {
            "view0": 1,
            "view": 0,
            "view2": 0,
            "view3": 0,
            "view4": 0,
            "view5": 0
        };
        const domain = await store_1.GlobalStore.getDomain();
        const cacheKey = constants_1.PREF_KEYS.cache_request;
        // eslint-disable-next-line prefer-const
        let { configID, filters, query, tag, sort, page } = request;
        if (configID) {
            if (configID == "new_update") {
                return {
                    url: `${domain}/?page=${page}`,
                    func: this.parser.getNewUpdateMangas
                };
            }
            return {
                url: `${domain}/${configID}?page=${page}`,
                func: this.parser.getMangasWithLikes
            };
        }
        if (!filters && !query && !tag && sort && sort.id != "") {
            request = this.cache.get(cacheKey) ?? request;
            filters = request.filters;
            query = request.query;
            tag = request.tag;
        }
        if (sort && sort.id) {
            cookie.view0 = 0;
            cookie[sort.id] = 1;
        }
        const cookies = Object.entries(cookie).map(([name, value]) => ({ name, value: value.toString() }));
        if (!filters && !query && !tag) {
            this.cache.del(cacheKey);
        }
        if (filters || query || tag) {
            this.cache.put(cacheKey, request);
        }
        if (filters) {
            const manga_name = encodeURI(filters.manga_name ?? "");
            const doujinshi = encodeURI(filters.doujinshi ?? "");
            const character = encodeURI(filters.character ?? "");
            const categories = filters.categories ?? [];
            const catQuery = categories.map((value) => `tag%5B%5D=${encodeURIComponent(value)}`).join('&');
            return {
                url: `${domain}/forum/search-plus.php?name=${manga_name}&dou=${doujinshi}&char=${character}&${catQuery}&search&page=${page}`,
                func: this.parser.getSearchResults,
            };
        }
        if (query) {
            return {
                url: `${domain}/tim-kiem-truyen.html?key=${encodeURI(query)}&page=${page}`,
                cookies: cookies,
                func: this.parser.getMangasWithLikes
            };
        }
        if (tag) {
            if (tag.propertyId == "upload") {
                return {
                    url: `${domain}${encodeURI(tag.tagId)}?page=${page}`,
                    cookies: cookies,
                    func: this.parser.getUploadMangas
                };
            }
            return {
                url: `${domain}${encodeURI(tag.tagId)}?page=${page}`,
                cookies: cookies,
                func: this.parser.getMangasWithLikes
            };
        }
        return { url: `${domain}/danh-sach.html?page=${page}`, cookies: cookies, func: this.parser.getMangasWithLikes };
    }
    // Content
    async getContent(contentId) {
        const domain = await store_1.GlobalStore.getDomain();
        const url = `${domain}/${encodeURI(contentId)}`;
        const $ = await this.fetchHTML(url);
        return this.parser.getContent($, url);
    }
    async getChapterData(_, chapterId) {
        const domain = await store_1.GlobalStore.getDomain();
        const $ = await this.fetchHTML(`${domain}/${chapterId}`);
        return this.parser.getChapterData($);
    }
    async fetchHTML(url, config) {
        console.log(`Requesting to the url: ${url}${config ? ", config: " + JSON.stringify(config) : ""}`);
        const response = await this.client.get(url, config);
        return (0, cheerio_1.load)(response.data);
    }
}
exports.Controller = Controller;

},{"./constants":1,"./parser":4,"./store":5,"cheerio":undefined,"memory-cache":70}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Target = void 0;
const daisuke_1 = require("@suwatte/daisuke");
const constants_1 = require("./constants");
const controller_1 = require("./controller");
const store_1 = require("./store");
class Target {
    constructor() {
        this.info = {
            id: "hentaivn",
            website: constants_1.HENTAIVN_DOMAIN,
            version: 1.1,
            name: "HentaiVN",
            supportedLanguages: ["vi-vn"],
            thumbnail: "hentaivn.png",
            minSupportedAppVersion: "6.0",
            rating: daisuke_1.CatalogRating.NSFW,
        };
        this.controller = new controller_1.Controller();
    }
    async headers() {
        return {
            Referer: await store_1.GlobalStore.getDomain() + "/",
        };
    }
    async getContent(contentId) {
        return this.controller.getContent(contentId);
    }
    async getChapters(_) {
        return [];
    }
    async getChapterData(contentId, chapterId) {
        return this.controller.getChapterData(contentId, chapterId);
    }
    async getTags() {
        const properties = [];
        const tags = await this.controller.getCategories();
        properties.push({ id: "categories", title: "Thể loại", tags });
        return properties;
    }
    // Directory
    getDirectory(request) {
        return this.controller.getSearchResults(request);
    }
    async getDirectoryConfig() {
        return {
            sort: {
                options: constants_1.SEARCH_SORTERS,
                canChangeOrder: true,
                default: {
                    id: "",
                    ascending: false,
                },
            },
            filters: await this.controller.getFilters(),
        };
    }
    // Page Links
    async getSectionsForPage(_) {
        return this.controller.buildHomePageSections();
    }
    resolvePageSection(_link, _sectionKey) {
        throw new Error("already resolved");
    }
    async willRequestImage(url) {
        return {
            url,
            headers: {
                ...await this.headers(),
            },
        };
    }
    // Preferences
    async getPreferenceMenu() {
        return {
            sections: [
                {
                    header: "Excluded Content",
                    children: [
                        (0, daisuke_1.UIMultiPicker)({
                            id: constants_1.PREF_KEYS.exclude_categories,
                            title: `Excluded Categories`,
                            options: await this.controller.getCategories(),
                            value: await store_1.GlobalStore.getExcludeCategories(),
                            didChange: store_1.GlobalStore.setExcludeCategories,
                        }),
                    ],
                },
                {
                    header: "Image Server",
                    children: [
                        (0, daisuke_1.UIPicker)({
                            id: constants_1.PREF_KEYS.image_server,
                            title: `Select Image Server`,
                            options: constants_1.IMAGE_SERVERS,
                            value: await store_1.GlobalStore.getImageServer(),
                            didChange: store_1.GlobalStore.setImageServer,
                        }),
                    ],
                },
                {
                    header: "HentaiVN Domain",
                    children: [
                        (0, daisuke_1.UITextField)({
                            id: constants_1.PREF_KEYS.domain,
                            title: "Domain name",
                            value: await store_1.GlobalStore.getDomain(),
                            didChange: store_1.GlobalStore.setDomain.bind(store_1.GlobalStore)
                        }),
                    ],
                },
            ],
        };
    }
}
exports.Target = Target;

},{"./constants":1,"./controller":2,"./store":5,"@suwatte/daisuke":6}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Parser = void 0;
const daisuke_1 = require("@suwatte/daisuke");
const constants_1 = require("./constants");
const store_1 = require("./store");
class Parser {
    constructor() {
        this.getBlockTopMangas = ($, divId) => {
            const items = [];
            $('ul > li > div', divId).each((_, manga) => {
                const title = $('h2', manga).attr('title') || "";
                const id = $('a', manga).attr('href')?.split('/').pop() || "";
                const coverStyle = $('div', manga).attr('style') || "";
                const coverMatch = coverStyle.match(/url\(['"]?(.*?)['"]?\)/);
                const cover = (coverMatch ? coverMatch[1] : "") || "";
                const subtitle = $('span.info-detail > a', manga).text().trim();
                if (id) {
                    items.push({ id, title, info: [subtitle], cover });
                }
            });
            return items;
        };
        this.isLastPage = ($) => {
            const nextButton = $('.pagination').find('a').last();
            // Check if the text of the button contains 'Next' or 'Cuối'
            return !(nextButton.text().includes('Next') || nextButton.text().includes('Cuối'));
        };
    }
    getTrendingMangas($) {
        return this.getBlockTopMangas($, "#myDIV");
    }
    getHotMangas($) {
        return this.getBlockTopMangas($, "#myDIV2");
    }
    async getNewUpdateMangas($) {
        const items = [];
        $('ul.page-item > li.item').each((_, manga) => {
            const title = $('h2', manga).attr('title') || "";
            const id = $('a', manga).attr('href')?.split('/').pop() || "";
            const cover = $('img', manga).attr("data-srcset") || $('img', manga).attr("src") || "";
            const info = $('a', manga).find('b').text().trim();
            if (id) {
                items.push({ id, title, subtitle: info, info: [info], cover });
            }
        });
        return items;
    }
    getNewUploadMangas($) {
        const items = [];
        $('ul.page-random li').each((_, manga) => {
            const title = $(manga).find('h2.des-same a b')?.text().trim() || "";
            const id = $(manga).find('h2.des-same a').attr('href')?.slice(1) || '';
            const cover = $(manga).find('div.img-same div').css("background")?.replace(/^url\(["']?/, '').replace(/["']?\)$/, '') || '';
            let info = "";
            info += $(manga).find('b a')?.text();
            info += "\n" + $(manga).find('b').eq(2).text() + $(manga).contents().eq(-1).text().trim();
            items.push({ id, title, info: [info], cover });
        });
        return items;
    }
    getSuggestionMangas($) {
        const items = [];
        $('ul.page-random li').each((_, manga) => {
            const title = $(manga).find('h2.des-same a b')?.text().trim() || '';
            const id = $(manga).find('h2.des-same a').attr('href')?.slice(1) || '';
            const cover = $(manga).find('div.img-same div').css("background")?.replace(/^url\(["']?/, '').replace(/["']?\)$/, '') || '';
            const categories = $(manga).find('p>span').slice(1).toArray().map(v => $(v).text());
            const info = categories.join(", ").match(/.{1,32}(,\s|$)|.{1,32}$/g) || [];
            items.push({ id, title, cover, info });
        });
        return items;
    }
    async getMangasWithLikes($) {
        const items = [];
        const excludeCategories = await store_1.GlobalStore.getExcludeCategories();
        $('div.block-item li').each((_, manga) => {
            const title = $(manga).find('div.box-description p a')?.eq(0).text().trim() || '';
            const id = $(manga).find('div a').attr('href')?.slice(1) || '';
            const cover = $(manga).find('div a img').attr('data-src') || '';
            const categories = $(manga)
                .find("p span a")
                .toArray()
                .map((element) => {
                return element.attribs['href'] || "";
            });
            const likes = $(manga).find('div.box-description p:nth-child(3)').text().trim();
            const containsExcludedCategory = categories.some(cat => (excludeCategories).includes(cat));
            if (id && !containsExcludedCategory) {
                items.push({ id, title, subtitle: likes, info: [likes], cover });
            }
        });
        return items;
    }
    getMostLikedMangaDaily($) {
        const items = [];
        $('#page-view-top li').each((_, manga) => {
            const id = $(manga).find('div a').attr('href')?.slice(1) || '';
            let title = $(manga).find('div a').text() || '';
            const likes = $(manga).find('div.view-top-2').text() || '';
            title = `${title} [${likes}]`;
            const cover = '';
            if (id) {
                items.push({ id, title, cover });
            }
        });
        return items;
    }
    async getRecommendMangas($) {
        const items = await this.getMangasWithLikes($);
        return items.map((item) => {
            return { id: item.id, title: item.title, cover: item.cover, info: item.info };
        });
    }
    async getUploadMangas($) {
        const items = [];
        const excludeCategories = await store_1.GlobalStore.getExcludeCategories();
        $('.content-left > ul:nth-child(1)>li').each((_, manga) => {
            const title = $(manga).find('div.box-description h2 a')?.eq(0).text().trim() || '';
            let index = 3;
            const subtitle = $(manga).find('b:contains(\'Tên Khác\')').text();
            if (subtitle) {
                index += 1;
            }
            const id = $(manga).find('div a').attr('href')?.slice(1) || '';
            const cover = $(manga).find('div a img').attr('data-src') || '';
            const categories = $(manga)
                .find("p span a")
                .toArray()
                .map((element) => {
                return element.attribs['href'] || "";
            });
            const likes = $(manga).find(`div.box-description p:nth-child(${index})`).text().trim().replace('\n', '');
            const containsExcludedCategory = categories.some(cat => (excludeCategories).includes(cat));
            if (id && !containsExcludedCategory) {
                items.push({ id, title, subtitle: likes, cover });
            }
        });
        return items;
    }
    async getHomepageSection($, id) {
        switch (id) {
            case "trending":
                return this.getTrendingMangas($);
            case "hot":
                return this.getHotMangas($);
            case "new_update":
                return this.getNewUpdateMangas($);
            case "new_upload":
                return this.getNewUploadMangas($);
            case "random_suggestion":
                return this.getSuggestionMangas($);
            case "top_liked_daily":
                return this.getMostLikedMangaDaily($);
            case "top_liked_all":
                return await this.getMangasWithLikes($);
            case "recommend":
                return await this.getRecommendMangas($);
            default:
                return [];
        }
    }
    async getSearchResults($) {
        const items = [];
        for (const obj of $('li.search-li').toArray()) {
            const cover = $('img', obj).attr('src') ?? '';
            const title = $('b', $('div.search-des', obj)).text().trim() ?? '';
            const id = $('a', $('div.search-des', obj)).attr('href')?.split('/').pop() ?? '';
            if (!id || !title)
                continue;
            items.push({ id, title, cover });
        }
        return items;
    }
    getRelatedMangas($) {
        const items = [];
        $('div.page-same li').each((_, manga) => {
            const title = $(manga).find('div.des-same').text().trim();
            const id = $(manga).find('div.des-same a').attr('href')?.slice(1);
            const subtitle = $(manga).find('b').eq(1).text();
            const cover = $(manga).find('div.img-same div').css("background")?.replace(/^url\(["']?/, '').replace(/["']?\)$/, '') || '';
            if (id) {
                items.push({ id, title, subtitle, cover });
            }
        });
        return items;
    }
    async getContent($, webUrl) {
        const title = $("h1[itemprop='name'] a").text().replace(/\n/g, '');
        const cover = $("div.page-ava img[rel='image_src']").attr('src') || "";
        const summary = $("p:contains('Nội dung')").next().text();
        const titles = $('a', $('span:contains("Tên Khác:")').parent()).toArray();
        const additionalTitles = titles.map(v => $(v).text().trim());
        const genres = $('a', $('span:contains("Thể Loại:")').parent()).toArray();
        const translators = $('a', $('span:contains("Nhóm dịch:")').parent()).toArray();
        const authors = $('a', $('span:contains("Tác giả:")').parent()).toArray();
        const characters = $('a', $('span:contains("Nhân vật:")').parent()).toArray();
        const parodies = $('a', $('span:contains("Doujinshi:")').parent()).toArray();
        const uploader = $('.name-uploader > a').first().toArray();
        const genreTags = this.createTags($, genres);
        let recommendedPanelMode = daisuke_1.ReadingMode.PAGED_MANGA;
        genreTags.forEach((genre) => {
            if (constants_1.VERTICAL_TYPES.includes(genre.title)) {
                recommendedPanelMode = daisuke_1.ReadingMode.WEBTOON;
            }
            if (constants_1.COMIC_TYPES.includes(genre.title)) {
                recommendedPanelMode = daisuke_1.ReadingMode.PAGED_COMIC;
            }
        });
        const isNSFW = true;
        const statusText = $("span:contains('Tình Trạng:')").next().text().trim(); // Get the text next to 'Tình Trạng:'
        let status = daisuke_1.PublicationStatus.ONGOING; // Set default status
        if (statusText.includes("Đang tiến hành")) {
            status = daisuke_1.PublicationStatus.ONGOING;
        }
        else if (statusText.includes("Đã hoàn thành")) {
            status = daisuke_1.PublicationStatus.COMPLETED;
        }
        const properties = [];
        properties.push({
            "id": "temp",
            title: "Temp",
            tags: []
        });
        if (genres.length > 0) {
            properties.push({
                id: "genres",
                title: "Thể loại",
                tags: genreTags,
            });
        }
        if (translators.length > 0) {
            properties.push({
                id: "translators",
                title: "Nhóm dịch",
                tags: this.createTags($, translators),
            });
        }
        if (authors.length > 0) {
            properties.push({
                id: "authors",
                title: "Tác giả",
                tags: this.createTags($, authors),
            });
        }
        if (characters.length > 0) {
            properties.push({
                id: "characters",
                title: "Nhân vật",
                tags: this.createTags($, characters),
            });
        }
        if (parodies.length > 0) {
            properties.push({
                id: "doujinshi",
                title: "Doujinshi",
                tags: this.createTags($, parodies),
            });
        }
        if (uploader) {
            properties.push({
                id: "uploader",
                title: "Đăng bởi",
                tags: this.createTags($, uploader)
            });
        }
        const info = [];
        const viewText = $('span.info:contains("Lượt xem:")').parent().text();
        const views = viewText.substring(viewText.indexOf('L')).split('\n')[0]?.slice(9).trim();
        if (views) {
            info.push(`👁 ${views}`);
        }
        const pageLikeElement = $('div.page_like');
        const likes = pageLikeElement.find('div.but_like').text().trim();
        const unlikes = pageLikeElement.find('div.but_unlike').text().trim();
        info.push(`👍 ${likes}  😡 ${unlikes}`);
        // Related Content
        const collections = [];
        const relatedMangas = this.getRelatedMangas($);
        if (relatedMangas.length > 0) {
            collections.push({
                id: "related_manga",
                title: "Cùng tác giả",
                highlights: relatedMangas,
            });
        }
        const chapters = await this.getChapters($);
        return {
            title,
            additionalTitles,
            cover,
            status,
            summary,
            recommendedPanelMode,
            isNSFW,
            webUrl,
            chapters,
            properties,
            info,
            collections
        };
    }
    async getChapters($) {
        const chapters = [];
        const imageServerId = await store_1.GlobalStore.getImageServerName() || "";
        const providers = [
            {
                id: imageServerId,
                name: Object.fromEntries(constants_1.IMAGE_SERVERS.map(e => [e.id, e.title]))[imageServerId] || ""
            },
        ];
        $('table.listing tbody tr').each((index, element) => {
            const chapterId = $('a', element).attr('href')?.slice(1) || "";
            const title = $('a h2', element).text();
            const time = $('td:last-child', element).text().trim();
            const [day, month, year] = time.split("/").map(Number);
            const date = new Date(year || 0, (month || 0) - 1, day);
            const number = index;
            chapters.push({
                chapterId,
                title,
                date,
                number,
                index,
                language: "vi-vn",
                providers
            });
        });
        let total = chapters.length;
        chapters.map((chapter) => {
            chapter.number = total;
            total -= 1;
        });
        return chapters;
    }
    getCategories($) {
        const tags = [];
        $("li").each((_, tag) => {
            const id = $(tag).find('a')?.attr('href') || "";
            const title = $(tag).find('a')?.text();
            tags.push({ id, title });
        });
        return tags;
    }
    getFilters($) {
        const filters = constants_1.DEFAULT_FILTERS;
        const categories = [];
        $("ul.ul-search li").each((_, cat) => {
            const id = $(cat).find('input').attr('value') || "";
            const title = $(cat).text();
            categories.push({ id, title });
        });
        filters.push({ id: "categories", title: "Thể loại cần tìm", options: categories, type: daisuke_1.FilterType.MULTISELECT });
        return filters;
    }
    async getChapterData($) {
        const urls = [];
        const imageServerDomain = await store_1.GlobalStore.getImageServer();
        $('#image img').each((_, obj) => {
            if (!obj.attribs['data-src'])
                return;
            let link = obj.attribs['data-src'];
            if (imageServerDomain.includes(constants_1.REPLACEABLE_IMAGE_SERVER_DOMAIN)) {
                const resourceID = link.substring(link.indexOf("20"));
                link = `https://${imageServerDomain}/images/${resourceID}`;
            }
            urls.push(link);
        });
        return {
            pages: urls.map((url) => ({ url })),
        };
    }
    createTags($, elements) {
        const tags = [];
        for (const element of elements) {
            tags.push({
                title: $(element).text().trim().replace(/(\d+\s*)+$/, ''),
                id: $(element).attr('href') || "",
            });
        }
        return tags;
    }
}
exports.Parser = Parser;

},{"./constants":1,"./store":5,"@suwatte/daisuke":6}],5:[function(require,module,exports){
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GlobalStore = exports.Store = void 0;
const lodash_1 = __importDefault(require("lodash"));
const constants_1 = require("./constants");
class Store {
    async getExcludeCategories() {
        const tags = await ObjectStore.stringArray(constants_1.PREF_KEYS.exclude_categories);
        if (!tags)
            return [];
        return tags;
    }
    async setExcludeCategories(v) {
        return ObjectStore.set(constants_1.PREF_KEYS.exclude_categories, v);
    }
    async getImageServer() {
        return await ObjectStore.string(constants_1.PREF_KEYS.image_server) || constants_1.DEFAULT_IMAGE_SERVER_DOMAIN;
    }
    async getImageServerName() {
        const server = await ObjectStore.string(constants_1.PREF_KEYS.image_server) || constants_1.DEFAULT_IMAGE_SERVER_DOMAIN;
        return lodash_1.default.invert(constants_1.IMAGE_SERVER_DOMAIN)[server] || "";
    }
    async setImageServer(v) {
        return ObjectStore.set(constants_1.PREF_KEYS.image_server, constants_1.IMAGE_SERVER_DOMAIN[v]);
    }
    async getDomain() {
        const value = await ObjectStore.string(constants_1.PREF_KEYS.domain);
        if (!value) {
            return constants_1.HENTAIVN_DOMAIN;
        }
        return value;
    }
    async setDomain(domain) {
        if (!this.isValidDomain(domain.trim())) {
            await ObjectStore.set(constants_1.PREF_KEYS.domain, constants_1.HENTAIVN_DOMAIN);
            return;
        }
        await ObjectStore.set(constants_1.PREF_KEYS.domain, domain.trim());
    }
    isValidDomain(domain) {
        // Regular expression for matching a valid domain with http or https
        const domainRegex = /^(https?:\/\/)?[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
        // Test the domain against the regex
        return domainRegex.test(domain);
    }
}
exports.Store = Store;
exports.GlobalStore = new Store();

},{"./constants":1,"lodash":undefined}],6:[function(require,module,exports){
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./runners"), exports);
__exportStar(require("./types"), exports);

},{"./runners":30,"./types":60}],7:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });

},{}],8:[function(require,module,exports){
arguments[4][7][0].apply(exports,arguments)
},{"dup":7}],9:[function(require,module,exports){
arguments[4][7][0].apply(exports,arguments)
},{"dup":7}],10:[function(require,module,exports){
arguments[4][7][0].apply(exports,arguments)
},{"dup":7}],11:[function(require,module,exports){
arguments[4][7][0].apply(exports,arguments)
},{"dup":7}],12:[function(require,module,exports){
arguments[4][7][0].apply(exports,arguments)
},{"dup":7}],13:[function(require,module,exports){
arguments[4][7][0].apply(exports,arguments)
},{"dup":7}],14:[function(require,module,exports){
arguments[4][7][0].apply(exports,arguments)
},{"dup":7}],15:[function(require,module,exports){
arguments[4][7][0].apply(exports,arguments)
},{"dup":7}],16:[function(require,module,exports){
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./ContentEvent"), exports);
__exportStar(require("./ChapterEvent"), exports);
__exportStar(require("./ProgressSync"), exports);
__exportStar(require("./LibrarySync"), exports);
__exportStar(require("./StreamContextProvider"), exports);
__exportStar(require("./ContextMenuHandler"), exports);
__exportStar(require("./GroupedUpdateProvider"), exports);
__exportStar(require("./ImageRedrawHandler"), exports);

},{"./ChapterEvent":8,"./ContentEvent":9,"./ContextMenuHandler":10,"./GroupedUpdateProvider":11,"./ImageRedrawHandler":12,"./LibrarySync":13,"./ProgressSync":14,"./StreamContextProvider":15}],17:[function(require,module,exports){
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./handlers"), exports);
__exportStar(require("./ContentSource"), exports);

},{"./ContentSource":7,"./handlers":16}],18:[function(require,module,exports){
arguments[4][7][0].apply(exports,arguments)
},{"dup":7}],19:[function(require,module,exports){
arguments[4][7][0].apply(exports,arguments)
},{"dup":7}],20:[function(require,module,exports){
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./ContentTracker"), exports);
__exportStar(require("./AdvancedTracker"), exports);

},{"./AdvancedTracker":18,"./ContentTracker":19}],21:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BasicAuthenticationUIIdentifier = void 0;
var BasicAuthenticationUIIdentifier;
(function (BasicAuthenticationUIIdentifier) {
    BasicAuthenticationUIIdentifier[BasicAuthenticationUIIdentifier["EMAIL"] = 0] = "EMAIL";
    BasicAuthenticationUIIdentifier[BasicAuthenticationUIIdentifier["USERNAME"] = 1] = "USERNAME";
})(BasicAuthenticationUIIdentifier || (exports.BasicAuthenticationUIIdentifier = BasicAuthenticationUIIdentifier = {}));

},{}],22:[function(require,module,exports){
arguments[4][7][0].apply(exports,arguments)
},{"dup":7}],23:[function(require,module,exports){
arguments[4][7][0].apply(exports,arguments)
},{"dup":7}],24:[function(require,module,exports){
arguments[4][7][0].apply(exports,arguments)
},{"dup":7}],25:[function(require,module,exports){
arguments[4][7][0].apply(exports,arguments)
},{"dup":7}],26:[function(require,module,exports){
arguments[4][7][0].apply(exports,arguments)
},{"dup":7}],27:[function(require,module,exports){
arguments[4][7][0].apply(exports,arguments)
},{"dup":7}],28:[function(require,module,exports){
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./Authentication"), exports);
__exportStar(require("./Preferences"), exports);
__exportStar(require("./ImageRequest"), exports);
__exportStar(require("./DirectoryHandler"), exports);
__exportStar(require("./PageProvider"), exports);
__exportStar(require("./Setup"), exports);
__exportStar(require("./PageResolver"), exports);

},{"./Authentication":21,"./DirectoryHandler":22,"./ImageRequest":23,"./PageProvider":24,"./PageResolver":25,"./Preferences":26,"./Setup":27}],29:[function(require,module,exports){
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RunnerEnvironment = void 0;
__exportStar(require("./extensions"), exports);
var RunnerEnvironment;
(function (RunnerEnvironment) {
    RunnerEnvironment[RunnerEnvironment["SOURCE"] = 0] = "SOURCE";
    RunnerEnvironment[RunnerEnvironment["TRACKER"] = 1] = "TRACKER";
})(RunnerEnvironment || (exports.RunnerEnvironment = RunnerEnvironment = {}));

},{"./extensions":28}],30:[function(require,module,exports){
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./ContentSource"), exports);
__exportStar(require("./Runner"), exports);
__exportStar(require("./ContentTracker"), exports);

},{"./ContentSource":17,"./ContentTracker":20,"./Runner":29}],31:[function(require,module,exports){
arguments[4][7][0].apply(exports,arguments)
},{"dup":7}],32:[function(require,module,exports){
"use strict";
// Picker
Object.defineProperty(exports, "__esModule", { value: true });

},{}],33:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UIStepper = exports.UIButton = exports.UIDatePicker = exports.UITextField = exports.UIToggle = exports.UIMultiPicker = exports.UIPicker = void 0;
const UIElements_1 = require("./UIElements");
const UIPicker = (props) => (Object.assign(Object.assign({}, props), { type: UIElements_1.UIComponentType.SELECT }));
exports.UIPicker = UIPicker;
const UIMultiPicker = (props) => (Object.assign(Object.assign({}, props), { type: UIElements_1.UIComponentType.MULTISELECT }));
exports.UIMultiPicker = UIMultiPicker;
const UIToggle = (props) => (Object.assign(Object.assign({}, props), { type: UIElements_1.UIComponentType.TOGGLE }));
exports.UIToggle = UIToggle;
const UITextField = (props) => (Object.assign(Object.assign({}, props), { type: UIElements_1.UIComponentType.TEXTFIELD }));
exports.UITextField = UITextField;
const UIDatePicker = (props) => (Object.assign(Object.assign({}, props), { type: UIElements_1.UIComponentType.DATEPICKER }));
exports.UIDatePicker = UIDatePicker;
const UIButton = (props) => (Object.assign(Object.assign({}, props), { type: UIElements_1.UIComponentType.BUTTON }));
exports.UIButton = UIButton;
const UIStepper = (props) => (Object.assign(Object.assign({}, props), { type: UIElements_1.UIComponentType.STEPPER }));
exports.UIStepper = UIStepper;

},{"./UIElements":34}],34:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UIComponentType = void 0;
var UIComponentType;
(function (UIComponentType) {
    UIComponentType[UIComponentType["SELECT"] = 0] = "SELECT";
    UIComponentType[UIComponentType["MULTISELECT"] = 1] = "MULTISELECT";
    UIComponentType[UIComponentType["STEPPER"] = 2] = "STEPPER";
    UIComponentType[UIComponentType["TOGGLE"] = 3] = "TOGGLE";
    UIComponentType[UIComponentType["TEXTFIELD"] = 4] = "TEXTFIELD";
    UIComponentType[UIComponentType["BUTTON"] = 5] = "BUTTON";
    UIComponentType[UIComponentType["DATEPICKER"] = 6] = "DATEPICKER";
})(UIComponentType || (exports.UIComponentType = UIComponentType = {}));

},{}],35:[function(require,module,exports){
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./Form"), exports);
__exportStar(require("./UIElements"), exports);
__exportStar(require("./UIDefinitions"), exports);
__exportStar(require("./UIElementBuilders"), exports);

},{"./Form":31,"./UIDefinitions":32,"./UIElementBuilders":33,"./UIElements":34}],36:[function(require,module,exports){
arguments[4][7][0].apply(exports,arguments)
},{"dup":7}],37:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DefinedLanguages = void 0;
var DefinedLanguages;
(function (DefinedLanguages) {
    DefinedLanguages["UNIVERSAL"] = "UNIVERSAL";
    DefinedLanguages["ENGLISH"] = "en_US";
    DefinedLanguages["KOREAN"] = "ko_KR";
    DefinedLanguages["JAPANESE"] = "ja_JP";
    DefinedLanguages["FRENCH"] = "fr_FR";
    DefinedLanguages["CHINESE"] = "zh-CN";
    DefinedLanguages["SPANISH"] = "es_ES";
    DefinedLanguages["PORTUGUESE"] = "pt_BR";
})(DefinedLanguages || (exports.DefinedLanguages = DefinedLanguages = {}));

},{}],38:[function(require,module,exports){
arguments[4][7][0].apply(exports,arguments)
},{"dup":7}],39:[function(require,module,exports){
arguments[4][7][0].apply(exports,arguments)
},{"dup":7}],40:[function(require,module,exports){
arguments[4][7][0].apply(exports,arguments)
},{"dup":7}],41:[function(require,module,exports){
arguments[4][7][0].apply(exports,arguments)
},{"dup":7}],42:[function(require,module,exports){
arguments[4][7][0].apply(exports,arguments)
},{"dup":7}],43:[function(require,module,exports){
arguments[4][7][0].apply(exports,arguments)
},{"dup":7}],44:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContentType = exports.ReadingFlag = exports.ReadingMode = exports.PublicationStatus = void 0;
// Enums
var PublicationStatus;
(function (PublicationStatus) {
    PublicationStatus[PublicationStatus["ONGOING"] = 1] = "ONGOING";
    PublicationStatus[PublicationStatus["COMPLETED"] = 2] = "COMPLETED";
    PublicationStatus[PublicationStatus["CANCELLED"] = 3] = "CANCELLED";
    PublicationStatus[PublicationStatus["HIATUS"] = 4] = "HIATUS";
})(PublicationStatus || (exports.PublicationStatus = PublicationStatus = {}));
/**
 * The method in which the content can be read
 */
var ReadingMode;
(function (ReadingMode) {
    ReadingMode[ReadingMode["PAGED_MANGA"] = 0] = "PAGED_MANGA";
    ReadingMode[ReadingMode["PAGED_COMIC"] = 1] = "PAGED_COMIC";
    ReadingMode[ReadingMode["PAGED_VERTICAL"] = 2] = "PAGED_VERTICAL";
    ReadingMode[ReadingMode["WEBTOON"] = 3] = "WEBTOON";
})(ReadingMode || (exports.ReadingMode = ReadingMode = {}));
var ReadingFlag;
(function (ReadingFlag) {
    ReadingFlag[ReadingFlag["READING"] = 0] = "READING";
    ReadingFlag[ReadingFlag["PLANNED"] = 1] = "PLANNED";
    ReadingFlag[ReadingFlag["COMPLETED"] = 2] = "COMPLETED";
    ReadingFlag[ReadingFlag["DROPPED"] = 3] = "DROPPED";
    ReadingFlag[ReadingFlag["REREADING"] = 4] = "REREADING";
    ReadingFlag[ReadingFlag["PAUSED"] = 5] = "PAUSED";
    ReadingFlag[ReadingFlag["UNKNOWN"] = 6] = "UNKNOWN";
})(ReadingFlag || (exports.ReadingFlag = ReadingFlag = {}));
var ContentType;
(function (ContentType) {
    ContentType[ContentType["MANGA"] = 0] = "MANGA";
    ContentType[ContentType["MANHUA"] = 1] = "MANHUA";
    ContentType[ContentType["MANHWA"] = 2] = "MANHWA";
    ContentType[ContentType["COMIC"] = 3] = "COMIC";
    ContentType[ContentType["NOVEL"] = 4] = "NOVEL";
})(ContentType || (exports.ContentType = ContentType = {}));

},{}],45:[function(require,module,exports){
arguments[4][7][0].apply(exports,arguments)
},{"dup":7}],46:[function(require,module,exports){
arguments[4][7][0].apply(exports,arguments)
},{"dup":7}],47:[function(require,module,exports){
arguments[4][7][0].apply(exports,arguments)
},{"dup":7}],48:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProviderLinkType = void 0;
var ProviderLinkType;
(function (ProviderLinkType) {
    ProviderLinkType[ProviderLinkType["WEBSITE"] = 0] = "WEBSITE";
    ProviderLinkType[ProviderLinkType["TWITTER"] = 1] = "TWITTER";
    ProviderLinkType[ProviderLinkType["DISCORD"] = 2] = "DISCORD";
    ProviderLinkType[ProviderLinkType["PATREON"] = 3] = "PATREON";
})(ProviderLinkType || (exports.ProviderLinkType = ProviderLinkType = {}));

},{}],49:[function(require,module,exports){
arguments[4][7][0].apply(exports,arguments)
},{"dup":7}],50:[function(require,module,exports){
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./Content"), exports);
__exportStar(require("./Highlight"), exports);
__exportStar(require("./Chapter"), exports);
__exportStar(require("./ChapterData"), exports);
__exportStar(require("./Property"), exports);
__exportStar(require("./Collection"), exports);
__exportStar(require("./Provider"), exports);
__exportStar(require("./Enums"), exports);
__exportStar(require("./ReaderContext"), exports);
__exportStar(require("./ContextMenu"), exports);
__exportStar(require("./DeepLinkContext"), exports);
__exportStar(require("./BooleanState"), exports);
__exportStar(require("./ContentProgressState"), exports);
__exportStar(require("./GroupedUpdatesResponse"), exports);

},{"./BooleanState":36,"./Chapter":37,"./ChapterData":38,"./Collection":39,"./Content":40,"./ContentProgressState":41,"./ContextMenu":42,"./DeepLinkContext":43,"./Enums":44,"./GroupedUpdatesResponse":45,"./Highlight":46,"./Property":47,"./Provider":48,"./ReaderContext":49}],51:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuthMethod = void 0;
var AuthMethod;
(function (AuthMethod) {
    AuthMethod[AuthMethod["USERNAME_PW"] = 0] = "USERNAME_PW";
    AuthMethod[AuthMethod["EMAIL_PW"] = 1] = "EMAIL_PW";
    AuthMethod[AuthMethod["WEB"] = 2] = "WEB";
    AuthMethod[AuthMethod["OAUTH"] = 3] = "OAUTH";
})(AuthMethod || (exports.AuthMethod = AuthMethod = {}));

},{}],52:[function(require,module,exports){
arguments[4][7][0].apply(exports,arguments)
},{"dup":7}],53:[function(require,module,exports){
arguments[4][7][0].apply(exports,arguments)
},{"dup":7}],54:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CatalogRating = void 0;
var CatalogRating;
(function (CatalogRating) {
    /**
     * Catalog does not contain ANY SUGGESTIVE OR NSFW content
     */
    CatalogRating[CatalogRating["SAFE"] = 0] = "SAFE";
    /**
     * Catalog may contain SUGGESTIVE OR NSFW content,
     * runners must hide NSFW content by default,
     * users will be required to verify they are of age to view NSFW content
     */
    CatalogRating[CatalogRating["MIXED"] = 1] = "MIXED";
    /**
     * Catalog contains MAINLY SUGGESTIVE OR NSFW content,
     * users will be required to verify they are of age to view NSFW content
     */
    CatalogRating[CatalogRating["NSFW"] = 2] = "NSFW";
})(CatalogRating || (exports.CatalogRating = CatalogRating = {}));

},{}],55:[function(require,module,exports){
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./Authentication"), exports);
__exportStar(require("./RunnerInfo"), exports);
__exportStar(require("./PagedResult"), exports);
__exportStar(require("./ContextProvider"), exports);

},{"./Authentication":51,"./ContextProvider":52,"./PagedResult":53,"./RunnerInfo":54}],56:[function(require,module,exports){
arguments[4][7][0].apply(exports,arguments)
},{"dup":7}],57:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FilterType = void 0;
var FilterType;
(function (FilterType) {
    /**
     * This Represents the filter as a toggle switch, the value returned in the directory request will be a `boolean`
     */
    FilterType[FilterType["TOGGLE"] = 0] = "TOGGLE";
    /**
     * This represents the filter as a picker, the value returned will be the `key` of the selected option as a `string`
     */
    FilterType[FilterType["SELECT"] = 1] = "SELECT";
    /**
     * This Represents the filter as a multi-picker, the value returned will the the keys of the selected options as an array of strings
     */
    FilterType[FilterType["MULTISELECT"] = 2] = "MULTISELECT";
    /**
     * This Represents the filter as a multi-picker,the value returned will be of type {@link ExcludableMultiSelectProp}
     */
    FilterType[FilterType["EXCLUDABLE_MULTISELECT"] = 3] = "EXCLUDABLE_MULTISELECT";
    /**
     * This will represent the filter as a textfield, the value returned will be a string
     */
    FilterType[FilterType["TEXT"] = 4] = "TEXT";
    /**
     * This is a basic filter that will only display the title or subtitle, it will not return any value in the populated `DirectoryRequest`
     */
    FilterType[FilterType["INFO"] = 5] = "INFO";
})(FilterType || (exports.FilterType = FilterType = {}));

},{}],58:[function(require,module,exports){
arguments[4][7][0].apply(exports,arguments)
},{"dup":7}],59:[function(require,module,exports){
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./DirectoryConfig"), exports);
__exportStar(require("./DirectoryRequest"), exports);
__exportStar(require("./DirectoryFilter"), exports);

},{"./DirectoryConfig":56,"./DirectoryFilter":57,"./DirectoryRequest":58}],60:[function(require,module,exports){
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Generate = void 0;
__exportStar(require("./core"), exports);
__exportStar(require("./content"), exports);
__exportStar(require("./networking"), exports);
__exportStar(require("./UI"), exports);
__exportStar(require("./tracker"), exports);
__exportStar(require("./directory"), exports);
__exportStar(require("./page"), exports);
const Generate = (v) => v;
exports.Generate = Generate;

},{"./UI":35,"./content":50,"./core":55,"./directory":59,"./networking":67,"./page":68,"./tracker":69}],61:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.NetworkClientBuilder = void 0;
/**
 * NetworkClientBuilder is a builder class used for creating and configuring instances of NetworkClient.
 * The builder allows you to configure various aspects of the NetworkClient, such as rate limits,
 * request/response transformers (interceptors), headers, cookies, timeout, status validator, and more.
 */
class NetworkClientBuilder {
    constructor() {
        // Array of functions that transform requests
        this.requestTransformers = [];
        // Array of functions that transform responses
        this.responseTransformers = [];
        // Object representing HTTP headers, where each key-value pair represents a header
        this.headers = {};
        // Array of cookies
        this.cookies = [];
    }
    /**
     * Sets the rate limit for the NetworkClient.
     *
     * @param requests - The maximum number of requests to make per interval.
     * @param interval - The length of the rate limiting interval in seconds.
     * @returns The builder, to allow for method chaining.
     */
    setRateLimit(requests, interval) {
        this.requestsPerSecond = requests / interval;
        return this;
    }
    /**
     * Adds a request interceptor to the NetworkClient.
     *
     * @param transformer - The interceptor to add. This should be a function that takes a request and modifies it in some way.
     * @returns The builder, to allow for method chaining.
     */
    addRequestInterceptor(transformer) {
        this.requestTransformers.push(transformer);
        return this;
    }
    /**
     * Adds a response interceptor to the NetworkClient.
     *
     * @param transformer - The interceptor to add. This should be a function that takes a response and modifies it in some way.
     * @returns The builder, to allow for method chaining.
     */
    addResponseInterceptor(transformer) {
        this.responseTransformers.push(transformer);
        return this;
    }
    /**
     * Sets the authorization token for the NetworkClient.
     *
     * @param token - The token to be included in the Authorization header of every request.
     * @returns The builder, to allow for method chaining.
     */
    setAuthorizationToken(token) {
        return this.addHeader("Authorization", token);
    }
    /**
     * Sets the status validator for the NetworkClient.
     *
     * @param validator - A function that takes a status code and returns true if it is considered successful.
     * @returns The builder, to allow for method chaining.
     */
    setStatusValidator(validator) {
        this.statusValidator = validator;
        return this;
    }
    /**
     * Sets the timeout for requests made by the NetworkClient.
     *
     * @param timeout - The maximum time to wait for a request to complete, in milliseconds.
     * @returns The builder, to allow for method chaining.
     */
    setTimeout(timeout) {
        this.timeout = timeout;
        return this;
    }
    /**
     * Sets the maximum number of retries for this request by the NetworkClient.
     *
     * @param retries - The maximum number of retries for this request
     * @returns The builder, to allow for method chaining.
     */
    setMaxRetries(retries) {
        this.maxRetries = retries;
        return this;
    }
    /**
     * Sets a header for the NetworkClient.
     *
     * @param key - The name of the header
     * @param value - The value of the header
     * @returns The builder, to allow for method chaining.
     */
    addHeader(key, value) {
        this.headers[key] = value;
        return this;
    }
    /**
     * Sets a cookie for the NetworkClient.
     *
     * @param cookie - The cookie to be included in every request.
     * @returns The builder, to allow for method chaining.
     */
    addCookie(cookie) {
        this.cookies.push(cookie);
        return this;
    }
    /**
     * Builds a NetworkClient using the parameters set on the builder.
     *
     * @returns A NetworkClient with the configured parameters.
     */
    build() {
        return new NetworkClient(this);
    }
}
exports.NetworkClientBuilder = NetworkClientBuilder;

},{}],62:[function(require,module,exports){
arguments[4][7][0].apply(exports,arguments)
},{"dup":7}],63:[function(require,module,exports){
arguments[4][7][0].apply(exports,arguments)
},{"dup":7}],64:[function(require,module,exports){
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.name = void 0;
const name = (base, known) => __awaiter(void 0, void 0, void 0, function* () {
    return Object.assign(Object.assign({}, base), known);
});
exports.name = name;

},{}],65:[function(require,module,exports){
arguments[4][7][0].apply(exports,arguments)
},{"dup":7}],66:[function(require,module,exports){
arguments[4][7][0].apply(exports,arguments)
},{"dup":7}],67:[function(require,module,exports){
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./Builder"), exports);
__exportStar(require("./Client"), exports);
__exportStar(require("./Request"), exports);
__exportStar(require("./Response"), exports);
__exportStar(require("./Transformer"), exports);
__exportStar(require("./Error"), exports);

},{"./Builder":61,"./Client":62,"./Error":63,"./Request":64,"./Response":65,"./Transformer":66}],68:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SectionStyle = void 0;
var SectionStyle;
(function (SectionStyle) {
    SectionStyle[SectionStyle["DEFAULT"] = 0] = "DEFAULT";
    SectionStyle[SectionStyle["INFO"] = 1] = "INFO";
    SectionStyle[SectionStyle["GALLERY"] = 2] = "GALLERY";
    SectionStyle[SectionStyle["NAVIGATION_LIST"] = 3] = "NAVIGATION_LIST";
    SectionStyle[SectionStyle["ITEM_LIST"] = 4] = "ITEM_LIST";
    SectionStyle[SectionStyle["PADDED_LIST"] = 5] = "PADDED_LIST";
    SectionStyle[SectionStyle["TAG"] = 6] = "TAG";
    SectionStyle[SectionStyle["STANDARD_GRID"] = 7] = "STANDARD_GRID";
})(SectionStyle || (exports.SectionStyle = SectionStyle = {}));

},{}],69:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TrackStatus = void 0;
var TrackStatus;
(function (TrackStatus) {
    TrackStatus["READING"] = "READING";
    TrackStatus["PLANNING"] = "PLANNING";
    TrackStatus["COMPLETED"] = "COMPLETED";
    TrackStatus["PAUSED"] = "PAUSED";
    TrackStatus["DROPPED"] = "DROPPED";
    TrackStatus["REREADING"] = "REREADING";
})(TrackStatus || (exports.TrackStatus = TrackStatus = {}));

},{}],70:[function(require,module,exports){
'use strict';

function Cache () {
  var _cache = Object.create(null);
  var _hitCount = 0;
  var _missCount = 0;
  var _size = 0;
  var _debug = false;

  this.put = function(key, value, time, timeoutCallback) {
    if (_debug) {
      console.log('caching: %s = %j (@%s)', key, value, time);
    }

    if (typeof time !== 'undefined' && (typeof time !== 'number' || isNaN(time) || time <= 0)) {
      throw new Error('Cache timeout must be a positive number');
    } else if (typeof timeoutCallback !== 'undefined' && typeof timeoutCallback !== 'function') {
      throw new Error('Cache timeout callback must be a function');
    }

    var oldRecord = _cache[key];
    if (oldRecord) {
      clearTimeout(oldRecord.timeout);
    } else {
      _size++;
    }

    var record = {
      value: value,
      expire: time + Date.now()
    };

    if (!isNaN(record.expire)) {
      record.timeout = setTimeout(function() {
        _del(key);
        if (timeoutCallback) {
          timeoutCallback(key, value);
        }
      }.bind(this), time);
    }

    _cache[key] = record;

    return value;
  };

  this.del = function(key) {
    var canDelete = true;

    var oldRecord = _cache[key];
    if (oldRecord) {
      clearTimeout(oldRecord.timeout);
      if (!isNaN(oldRecord.expire) && oldRecord.expire < Date.now()) {
        canDelete = false;
      }
    } else {
      canDelete = false;
    }

    if (canDelete) {
      _del(key);
    }

    return canDelete;
  };

  function _del(key){
    _size--;
    delete _cache[key];
  }

  this.clear = function() {
    for (var key in _cache) {
      clearTimeout(_cache[key].timeout);
    }
    _size = 0;
    _cache = Object.create(null);
    if (_debug) {
      _hitCount = 0;
      _missCount = 0;
    }
  };

  this.get = function(key) {
    var data = _cache[key];
    if (typeof data != "undefined") {
      if (isNaN(data.expire) || data.expire >= Date.now()) {
        if (_debug) _hitCount++;
        return data.value;
      } else {
        // free some space
        if (_debug) _missCount++;
        _size--;
        delete _cache[key];
      }
    } else if (_debug) {
      _missCount++;
    }
    return null;
  };

  this.size = function() {
    return _size;
  };

  this.memsize = function() {
    var size = 0,
      key;
    for (key in _cache) {
      size++;
    }
    return size;
  };

  this.debug = function(bool) {
    _debug = bool;
  };

  this.hits = function() {
    return _hitCount;
  };

  this.misses = function() {
    return _missCount;
  };

  this.keys = function() {
    return Object.keys(_cache);
  };

  this.exportJson = function() {
    var plainJsCache = {};

    // Discard the `timeout` property.
    // Note: JSON doesn't support `NaN`, so convert it to `'NaN'`.
    for (var key in _cache) {
      var record = _cache[key];
      plainJsCache[key] = {
        value: record.value,
        expire: record.expire || 'NaN',
      };
    }

    return JSON.stringify(plainJsCache);
  };

  this.importJson = function(jsonToImport, options) {
    var cacheToImport = JSON.parse(jsonToImport);
    var currTime = Date.now();

    var skipDuplicates = options && options.skipDuplicates;

    for (var key in cacheToImport) {
      if (cacheToImport.hasOwnProperty(key)) {
        if (skipDuplicates) {
          var existingRecord = _cache[key];
          if (existingRecord) {
            if (_debug) {
              console.log('Skipping duplicate imported key \'%s\'', key);
            }
            continue;
          }
        }

        var record = cacheToImport[key];

        // record.expire could be `'NaN'` if no expiry was set.
        // Try to subtract from it; a string minus a number is `NaN`, which is perfectly fine here.
        var remainingTime = record.expire - currTime;

        if (remainingTime <= 0) {
          // Delete any record that might exist with the same key, since this key is expired.
          this.del(key);
          continue;
        }

        // Remaining time must now be either positive or `NaN`,
        // but `put` will throw an error if we try to give it `NaN`.
        remainingTime = remainingTime > 0 ? remainingTime : undefined;

        this.put(key, record.value, remainingTime);
      }
    }

    return this.size();
  };
}

module.exports = new Cache();
module.exports.Cache = Cache;

},{}]},{},[3])(3)
});
